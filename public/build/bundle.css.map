{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Listing.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n\n  import \"bulma/css/bulma.css\";\n  import Listing from \"./Listing.svelte\";\n  let listings = [];\n  let deleted = new Set();\n  let saved = new Set();\n  let showDeleted = false;\n  let showSaved = false;\n  let showOthers = true;\n  let searchText = \"\";\n\n  function addListing(item) {\n    const listing = {\n      id: item.id,\n      kids: item.kids,\n      text: item.text,\n      time: item.time\n    };\n    if (!listing.text) {\n      console.log(\n        `Failed to get https://news.ycombinator.com/item?id=${item.id}`\n      );\n      console.log(item);\n    } else {\n      listings.push(listing);\n      listings = listings;\n    }\n  }\n\n  onMount(async () => {\n    if (window.localStorage.saved)\n      saved = new Set(JSON.parse(window.localStorage.saved));\n    if (window.localStorage.deleted)\n      deleted = new Set(JSON.parse(window.localStorage.deleted));\n    fetch(\"https://hacker-news.firebaseio.com/v0/item/23379196.json\")\n      .then(r => r.json())\n      .then(item => item.kids)\n      .then(kids =>\n        Promise.all(\n          kids.map(kid =>\n            fetch(`https://hacker-news.firebaseio.com/v0/item/${kid}.json`)\n              .then(r => r.json())\n              .then(json => {\n                addListing(json);\n              })\n          )\n        )\n      );\n    window.fl = filteredListings;\n  });\n\n  $: lowerSearchText = searchText.toLowerCase();\n\n  $: filteredListings = listings.filter(\n    l =>\n      l.text.toLowerCase().includes(lowerSearchText) &&\n      ((deleted.has(l.id) && showDeleted) ||\n        (saved.has(l.id) && showSaved) ||\n        (!(deleted.has(l.id) || saved.has(l.id)) && showOthers))\n  );\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    margin: 0 auto;\n  }\n</style>\n\n<main>\n  <div class=\"field has-addons has-addons-centered\">\n    <input type=\"text\" bind:value={searchText} />\n    <div class=\"buttons has-addons\">\n      <button\n        class=\"button is-light\"\n        class:is-inverted={showOthers}\n        on:click={() => (showOthers = !showOthers)}>\n        Others {listings.length - deleted.size - saved.size}\n      </button>\n      <button\n        class=\"button is-light\"\n        class:is-inverted={showDeleted}\n        on:click={() => (showDeleted = !showDeleted)}>\n        Deleted {deleted.size}\n      </button>\n      <button\n        class=\"button is-light\"\n        class:is-inverted={showSaved}\n        on:click={() => (showSaved = !showSaved)}>\n        Saved {saved.size}\n      </button>\n    </div>\n  </div>\n  {#each filteredListings as listing (listing.id)}\n    <Listing\n      title={listing.text.split('<p>', 1)[0]}\n      content={listing.text}\n      on:delete={() => {\n        deleted.add(listing.id);\n        deleted = deleted;\n        window.localStorage.deleted = JSON.stringify(Array.from(deleted));\n      }}\n      on:save={() => {\n        saved.add(listing.id);\n        saved = saved;\n        window.localStorage.saved = JSON.stringify(Array.from(saved));\n      }} />\n  {/each}\n</main>\n",
    "<script>\n  import Button from \"svelma/src/components/Button.svelte\";\n  import Collapse from \"svelma/src/components/Collapse.svelte\";\n  export let title = \"title\";\n  export let content = \"content\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n</script>\n\n<style>\n  .box {\n    max-width: 900px;\n    margin: auto;\n  }\n  .description {\n    text-align: left;\n    padding-top: 1em;\n  }\n</style>\n\n<div class=\"box\">\n  <div class=\"columns\">\n    <div class=\"column is-narrow\">\n      <Button type=\"is-large\" on:click={() => dispatch('delete')}>\n        Ignore\n      </Button>\n    </div>\n    <div class=\"column\">\n      <Collapse open={false}>\n        <p class=\"title is-4\" slot=\"trigger\">\n          {@html title}\n        </p>\n        <p class=\"description\">\n          {@html content}\n        </p>\n      </Collapse>\n    </div>\n    <div class=\"column is-narrow\">\n      <Button type=\"is-large\" on:click={() => dispatch('save')}>Save</Button>\n    </div>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAiEE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC;AC3DD,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC"
}